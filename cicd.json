{
    "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "Launch Network Stack - CSYE 6225 Spring 2020",
        "Metadata": {
    
        },
        "Parameters": {
            "VPCCidrBlock" : {
                "Type" : "String",
                "Description" : "Please enter CIDR block range for VPC : "
            },
            "MyVPCName" : {
                "Type" : "String"
            },
            "Subnet1CIDR" : {
                "Type" : "String",
                "Description" : "Please enter CIDR block range for Subnet 1 : "
            },
            "Subnet2CIDR" : {
                "Type" : "String",
                "Description" : "Please enter CIDR block range for Subnet 2 : "
            },
            "Subnet3CIDR" : {
                "Type" : "String",
                "Description" : "Please enter CIDR block range for Subnet 3 : "
            },
            "InstanceTypeEC2": {
              "Type": "String",
              "AllowedValues": [
                  "t2.micro",
                  "m1.small"
              ]
          },
          "KeyNameForSSH": {
              "Type": "String"
          },
          "AMIId": {
              "Type": "String"
          },
          "myDBInstanceIdentifier": {
              "Type": "String"
          },
          "myEngine": {
              "Type": "String"
          },
          "myDBInstanceClass": {
              "Type": "String"
          },
          "myDBAllocatedStorage": {
              "Type": "Number",
              "Description": "The size of the database (GiB)"
          },
          "myDBName": {
              "Type": "String"
          },
          "myDatabaseUsername": {
              "Type": "String"
          },
          "myDatabasePassword": {
              "Type": "String",
              "NoEcho": true
          },
          "myPublicAccessibiltiyRDS":{
            "Type":"String",
            "AllowedValues": [
              "yes",
              "no"
            ]
          },

        "MyprivateS3": {
            "Type": "String"
        },
        "CircleCIUser": {
            "Type": "String"
        },
        "CodeDeployAppName": {
            "Type": "String"
        },
        "myapplicationSecurityGroup" : {
          "Type":"String"
        },
        "mydatabaseSecurityGroup" : {
          "Type":"String"
        },
        "myWebAppEC2S3Policy" : {
          "Type":"String"
        },
        "myEC2InstanceCSYE6225Role" : {
          "Type":"String"
        },
        "myEC2CSYE6255InstanceProfile" : {
          "Type":"String"
        },
        "myCodeDeployEC2ServiceRole": {
          "Type":"String"
        },
        "myCodeDeployServiceRole": {
          "Type":"String"
        },
        "myCodeDeployEC2S3": {
          "Type":"String"
        },
        "myCircleCIUploadToS3" :  {
          "Type":"String"
        },
        "myCircleCICodeDeploy" : {
          "Type":"String"
        },
        "myComputePlatformServer": {
          "Type":"String"
        },
        "mycsye6225webappdeployment": {
          "Type":"String"
        },
        "myDeploymentType":{
          "Type":"String"
        },
        "myDeploymentOption" : {
          "Type":"String"
        },
        "myDeploymentConfigName": {
          "Type":"String"
        }
      
      },
        "Mappings": {
    
        },
        "Conditions": {
          "DatabaseRdsPublicAccess" : {"Fn::Equals" : [{"Ref" : "myPublicAccessibiltiyRDS"}, "yes"]}
        },
        "Resources": {
            
            "myVPC": {
              "Type": "AWS::EC2::VPC",
              "Properties": {
                "CidrBlock": {"Ref":"VPCCidrBlock"},
                "InstanceTenancy" : "default",
                "Tags" : [ {"Key" : "Name", "Value" : {"Ref":"MyVPCName"}} ]
              }
            },
            
            "myPublicSubnet1": {
              "Type": "AWS::EC2::Subnet",
              "Properties": {
                "VpcId": {"Ref" : "myVPC"},
                "CidrBlock": {"Ref":"Subnet1CIDR"},
                "AvailabilityZone" : {
                    "Fn::Select" : [ 
                      "0", 
                      { 
                        "Fn::GetAZs" : "" 
                      } 
                    ]
                  },
                "Tags" : [ {"Key" : "Name", "Value" : "publicSubnet1"} ]
              }
            },
            
            "myPublicSubnet2": {
              "Type": "AWS::EC2::Subnet",
              "Properties": {
                "VpcId": {"Ref" : "myVPC"},
                "CidrBlock": {"Ref":"Subnet2CIDR"},
                "AvailabilityZone" : {
                    "Fn::Select" : [ 
                      "1", 
                      { 
                        "Fn::GetAZs" : "" 
                      } 
                    ]
                  },
                "Tags" : [ {"Key" : "Name", "Value" : "publicSubnet2"} ]
              }
            },
            
            "myPublicSubnet3": {
              "Type": "AWS::EC2::Subnet",
              "Properties": {
                "VpcId": {"Ref" : "myVPC"},
                "CidrBlock": {"Ref":"Subnet3CIDR"},
                "AvailabilityZone" : {
                    "Fn::Select" : [ 
                      "2", 
                      { 
                        "Fn::GetAZs" : "" 
                      } 
                    ]
                  },
                "Tags" : [ {"Key" : "Name", "Value" : "publicSubnet3"} ]
              }
            },
            
            
            "myInternetGateway": {
              "Type": "AWS::EC2::InternetGateway",
              "Properties": {
                "Tags" : [ {"Key" : "Name", "Value" : "InternetGateway-6255"} ]
              }
            },
            "AttachGateway": {
              "Type": "AWS::EC2::VPCGatewayAttachment",
              "Properties": {
                "VpcId": {"Ref" : "myVPC"},
                "InternetGatewayId": { "Ref": "myInternetGateway" }
              }
            },
            
            "myRouteTable": {
              "Type": "AWS::EC2::RouteTable",
              "Properties": {
                "VpcId": {"Ref" : "myVPC"},
                "Tags" : [ {"Key" : "Name", "Value" : "RouteTable-6255"} ]
              }
            },
          
            "mySubnetRouteTableAssociation1": {
              "Type": "AWS::EC2::SubnetRouteTableAssociation",
              "Properties": {
                "SubnetId": {"Ref" : "myPublicSubnet1"},
                "RouteTableId": { "Ref": "myRouteTable" }
              }
            },
            "mySubnetRouteTableAssociation2": {
              "Type": "AWS::EC2::SubnetRouteTableAssociation",
              "Properties": {
                "SubnetId": {"Ref" : "myPublicSubnet2"},
                "RouteTableId": { "Ref": "myRouteTable" }
              }
            },
            "mySubnetRouteTableAssociation3": {
              "Type": "AWS::EC2::SubnetRouteTableAssociation",
              "Properties": {
                "SubnetId": {"Ref" : "myPublicSubnet3"},
                "RouteTableId": { "Ref": "myRouteTable" }
              }
            },        
            "myRoute" : {
              "Type" : "AWS::EC2::Route",
              "Properties" : {
                "RouteTableId" : { "Ref" : "myRouteTable" },
                "DestinationCidrBlock" : "0.0.0.0/0",
                "GatewayId" : { "Ref" : "myInternetGateway" }
              }
            },
    
            
            "applicationSecurityGroup" : {
              "Type" : "AWS::EC2::SecurityGroup",
              "Properties" : {
                "GroupName" :  {"Ref" : "myapplicationSecurityGroup"},
                "GroupDescription" : "Creating application security group through cloud formation",
                "Tags" :  [ {"Key" : "Name" , "Value" : "applicationSecurityGroup-csye6225" }],
                "SecurityGroupIngress" : [ 
                 {
                    "IpProtocol" : "tcp",
                    "FromPort" : 22,
                    "ToPort" : 22,
                    "CidrIp" : "0.0.0.0/0"
                 },
                 {
                  "IpProtocol" : "tcp",
                  "FromPort" : 80,
                  "ToPort" : 80,
                  "CidrIp" : "0.0.0.0/0"
                 },
                 {
                  "IpProtocol" : "tcp",
                  "FromPort" : 443,
                  "ToPort" : 443,
                  "CidrIp" : "0.0.0.0/0"
                 },
                 {
                  "IpProtocol" : "tcp",
                  "FromPort" : 8080,
                  "ToPort" : 8080,
                  "CidrIp" : "0.0.0.0/0"
                 }
                ],
                "VpcId": {"Ref" : "myVPC"}
                
              }
            },
            "databaseSecurityGroup" : {
              "Type" : "AWS::EC2::SecurityGroup",
              "Properties" : {
                "GroupName" :  {"Ref" : "mydatabaseSecurityGroup"},
                "GroupDescription" : "Creating database security group through cloud formation",
                "Tags" :  [ {"Key" : "Name" , "Value" : "databaseSecurityGroup-csye6225" }],
                "SecurityGroupIngress" : [ 
                 {
                    "IpProtocol" : "tcp",
                    "FromPort" : 3306,
                    "ToPort" : 3306,
                    "SourceSecurityGroupId" : {
                      "Ref" : "applicationSecurityGroup"
                    }
                 }
                ],
                "VpcId": {"Ref" : "myVPC"}
                
              }
            },
    
              
              "myS3Bucket": {
                "Type": "AWS::S3::Bucket",
                "DeletionPolicy": "Delete",
                "Properties": {
                  "PublicAccessBlockConfiguration": {
                    "BlockPublicAcls": "true",
                    "BlockPublicPolicy": "true",
                    "IgnorePublicAcls": "true",
                    "RestrictPublicBuckets": "true"
                },
                  "LifecycleConfiguration": {
                    "Rules" : [{
                    "Id" : "S3 Transition and Expiration",
                    "Prefix" : "",
                    "Status" : "Enabled",
                    "ExpirationInDays" : "90",
                    "Transitions" : [
                      {
                        "StorageClass" : "STANDARD_IA",
                        "TransitionInDays" : 30
                      }
    
                    ]
                  }
                  ]},
                  "BucketEncryption" : {
                    "ServerSideEncryptionConfiguration" : [ {"ServerSideEncryptionByDefault": {
                      "SSEAlgorithm" : "AES256"
                      } 
                      }] 
                }
              }
            },
            
            "myWebAppS3Policy": {
               "Type": "AWS::IAM::ManagedPolicy",
               "DependsOn" : "myS3Bucket",
               "Properties": {
                "ManagedPolicyName":  {"Ref" : "myWebAppEC2S3Policy"},
                  "PolicyDocument" : {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": [
                                "s3:*"
                            ],
                            "Effect": "Allow",
                            "Resource": 
                            {
                              "Fn::Join": [
                                  "",
                                  [
                                      "arn:aws:s3:::",
                                      {
                                          "Ref": "myS3Bucket"
                                      },
                                      "/*"
                                  ]
                              ]
                          }
                        }
                    ]
                }
              }
            },
    
            "myEC2CSYE6225Role": {
              "Type": "AWS::IAM::Role",
              "DependsOn": "myWebAppS3Policy",
              "Properties": {
                  "AssumeRolePolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                          {
                              "Effect": "Allow",
                              "Principal": {
                                  "Service": [
                                      "ec2.amazonaws.com"
                                  ]
                              },
                              "Action": [
                                  "sts:AssumeRole"
                              ]
                          }
                      ]
                  },
                  "ManagedPolicyArns": 
                  [
                      {
                          "Ref": "myWebAppS3Policy"
                      }
                  ],
                  "RoleName": {"Ref" : "myEC2InstanceCSYE6225Role"}
              }
          },
    
          

          "EC2InstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "DependsOn": "myEC2CSYE6225Role",
            "Properties": {
                "InstanceProfileName": {"Ref" : "myEC2CSYE6255InstanceProfile"},
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "myEC2CSYE6225Role"
                    }
                ]
            }
        },
          "CodeDeployEC2S3": {
             "Type": "AWS::IAM::ManagedPolicy",
             "Properties": {
                "Groups" : [  ],
                "PolicyDocument" : {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": [
                                "s3:GetObject",
                                "s3:ListObject"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:aws:s3:::",
                                        {
                                          "Ref": "MyprivateS3"
                                        },
                                        "/*"
                                      ]
                                    ]
                                  }
                              ]
                        }
                    ]
                },
                "ManagedPolicyName" : {"Ref" : "myCodeDeployEC2S3"}
             }
          },

          
          "CircleCIUploadToS3": {
             "Type": "AWS::IAM::Policy",
             "Properties": {
                "Groups" : [  ],
                "PolicyDocument" : {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "s3:PutObject"
                            ],
                            "Resource": [
                                {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:aws:s3:::",
                                        {
                                          "Ref": "MyprivateS3"
                                        },
                                        "/*"
                                      ]
                                    ]
                                  }
                            ]
                        }
                    ]
                }
                ,
                "PolicyName" :{"Ref" : "myCircleCIUploadToS3"},
                "Users" : [  
                    {
                    "Ref": "CircleCIUser"
                    }
             ]
             }
          },
          
          "CircleCICodeDeploy": {
             "Type": "AWS::IAM::Policy",
             "Properties": {
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "codedeploy:RegisterApplicationRevision",
                      "codedeploy:GetApplicationRevision"
                    ],
                    "Resource": {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:codedeploy:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":application:",
                          {
                            "Ref": "CodeDeployAppName"
                          }
                        ]
                      ]
                    }
                  },
                  {
                    "Effect": "Allow",
                    "Action": [
                      "codedeploy:CreateDeployment",
                      "codedeploy:GetDeployment"
                    ],
                    "Resource": [
                      "*"
                    ]
                  },
                  {
                    "Effect": "Allow",
                    "Action": [
                      "codedeploy:GetDeploymentConfig"
                    ],
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:codedeploy:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":deploymentconfig:CodeDeployDefault.OneAtATime"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:codedeploy:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":deploymentconfig:CodeDeployDefault.HalfAtATime"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:codedeploy:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":deploymentconfig:CodeDeployDefault.AllAtOnce"
                          ]
                        ]
                      }
                    ]
                  }
                ]
              },
              
                "PolicyName" : {"Ref" : "myCircleCICodeDeploy"},
                "Users" : [  
                    {
                    "Ref": "CircleCIUser"
                    }
                 ]
             }
          },          
          
          "CodeDeployEC2ServiceRole": {
             "Type": "AWS::IAM::Role",
             "Properties": {
                "AssumeRolePolicyDocument": {  
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Principal": {
                          "Service": [
                            "ec2.amazonaws.com"
                          ]
                        },
                        "Action": [
                          "sts:AssumeRole"
                        ]
                      }
                    ] },
                "RoleName":  {"Ref" : "myCodeDeployEC2ServiceRole"},
                "ManagedPolicyArns" :[
                  {
                    "Ref" : "CodeDeployEC2S3"
                  },
                  {
                    "Ref" : "myWebAppS3Policy"
                  }
                ]
             }
          },
          
          
          "CodeDeployServiceRole": {
             "Type": "AWS::IAM::Role",
             "Properties": {
                "AssumeRolePolicyDocument": {     
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Sid": "",
                        "Effect": "Allow",
                        "Principal": {
                          "Service": [
                            "codedeploy.amazonaws.com"
                          ]
                        },
                        "Action": "sts:AssumeRole"
                      }
                    ]},
               
                    "ManagedPolicyArns": [
                        "arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole"
                      ],
                      "RoleName": {"Ref" : "myCodeDeployServiceRole"}
             }
          },
          
    
          "CodeDeployName": {
            "Type": "AWS::CodeDeploy::Application",
            "Properties": {
              "ApplicationName": {
                "Ref": "CodeDeployAppName"
              },
              "ComputePlatform" :  {"Ref" : "myComputePlatformServer"}
            }
          },

          "CodeDeployDeploymentGroup": {
            "Type": "AWS::CodeDeploy::DeploymentGroup",
            "Properties": {
              "ApplicationName": {
                "Ref": "CodeDeployAppName"
              },
              "AutoRollbackConfiguration": {
                "Enabled": "true",
                "Events": [
                  "DEPLOYMENT_FAILURE"
                ]
              },
              "Ec2TagFilters" : [
                {
                 "Key": "Name",
                "Type": "KEY_AND_VALUE",
                "Value": "csye6225-EC2Instance"
                }
              ],
              "DeploymentConfigName": {"Ref" : "myDeploymentConfigName"},
              "DeploymentGroupName": {"Ref" : "mycsye6225webappdeployment"},
              "DeploymentStyle": {
                "DeploymentOption":{"Ref" : "myDeploymentOption"},
                "DeploymentType": {"Ref" : "myDeploymentType"}
              },
              "ServiceRoleArn": {
                "Fn::GetAtt": [
                  "CodeDeployServiceRole",
                  "Arn"
                ]
              }
            }
          },
          
          
          "CodeDeployServiceRoleInstanceProfile": {
             "Type": "AWS::IAM::InstanceProfile",
             "Properties": {
                "Path": "/",
                "Roles": [ 
                    {
                    "Ref": "CodeDeployEC2ServiceRole"
                    } 
                ],
                "InstanceProfileName": "CodeDeployServiceRoleInstanceProfile"
             }
          },
    
        "myRDSInstance": {
          "Type": "AWS::RDS::DBInstance",
          "Properties": {
              "DBInstanceIdentifier": {
                  "Ref": "myDBInstanceIdentifier"
              },
    
              "DBName": {
                  "Ref": "myDBName"
              },
              "DBInstanceClass": {
                  "Ref": "myDBInstanceClass"
              },
              "AllocatedStorage": {
                  "Ref": "myDBAllocatedStorage"
              },
              "Engine":{
                "Ref": "myEngine"},
              
              "MasterUsername": {
    
                  "Ref": "myDatabaseUsername"
              },
              "MasterUserPassword": {
                  "Ref": "myDatabasePassword"
    
              },
              "MultiAZ": false,
              "PubliclyAccessible": { "Fn::If" : [
                "DatabaseRdsPublicAccess",
                true,
                false
              ]},
              "Tags": [
                  {
                      "Key": "Name",
                      "Value": "RDS MySQL - CSYE6225"
                  }
              ],
              "VPCSecurityGroups": [
                  {
                      "Ref": "databaseSecurityGroup"
                  }
              ],
              "DBSubnetGroupName": {
                  "Ref": "DBSubnetGroup"
              }
          }
        }
       ,
          
       "DBSubnetGroup": {
        "Type": "AWS::RDS::DBSubnetGroup",
        "Properties": {
            "DBSubnetGroupDescription": "Included two Subnet- PublicSubnetId2, PublicSubnetId3",
            "SubnetIds": [
                {
                    "Ref": "myPublicSubnet2"
                },
                {
                    "Ref": "myPublicSubnet3"
                }
            ],
            "Tags": [{"Key": "Name","Value": "Database SubnetGroup "} ]
        }
    },

    "ec2Instance": {
      "Type": "AWS::EC2::Instance",
      "DependsOn": [
          "CodeDeployServiceRoleInstanceProfile",
          "CodeDeployEC2ServiceRole",
          "myRDSInstance"
      ],
      "Properties": {
          "ImageId": {
              "Ref": "AMIId"
          },
          "NetworkInterfaces": [
              {
                  "AssociatePublicIpAddress": "True",
                  "SubnetId": {
                      "Ref": "myPublicSubnet1"
                  },
                  "DeviceIndex": "0",
                  "GroupSet": [
                      {
                          "Ref": "applicationSecurityGroup"
                      }
                  ]
              }
          ],
          "InstanceType": {
              "Ref": "InstanceTypeEC2"
          },
          "Tags": [{"Key": "Name", "Value":"csye6225-EC2Instance" }],
          "KeyName": {
              "Ref": "KeyNameForSSH"
          },
          "IamInstanceProfile": {
              "Ref": "CodeDeployServiceRoleInstanceProfile"
          },
          "BlockDeviceMappings": [
              {
                  "DeviceName": "/dev/sda1",
                  "Ebs": {
                      "VolumeSize": "20",
                      "VolumeType": "gp2",
                      "DeleteOnTermination": true
                  }
              }
          ],
          "DisableApiTermination": "false",
          "UserData" : {
            "Fn::Base64": 
          {
              "Fn::Join": 
            [
                "\n",
                [ 
                       "#!/bin/bash -xe \n",
                       "sudo apt update \n",
                       "sudo apt install mysql-client -y \n",
                       {
                        "Fn::Join": 
                        ["",
                          ["echo ",
                           "'", 
                           "export MYSQL_USERNAME=",
                           "\"",
                           {
                             "Ref": "myDatabaseUsername"
                           },
                           "\"",
                           "'"," >> /etc/profile \n"]
                        ]
                      },
                      {
                        "Fn::Join": 
                        ["",
                          ["echo ",
                           "'", 
                           "export MYSQL_ROOT_PASSWORD=",
                           "\"",
                           {
                             "Ref": "myDatabasePassword"
                           },
                           "\"",
                           "'"," >> /etc/profile \n"]
                        ]
                      },
                      {
                        "Fn::Join": 
                        ["",
                          ["echo ",
                           "'", 
                           "export MYSQL_DATABASE=",
                           "\"",
                           {
                             "Ref": "myDBName"
                           },
                           "\"",
                           "'"," >> /etc/profile \n"]
                        ]
                      },
                       {
                         "Fn::Join": 
                            ["",
                                [ "echo ",
                                  "'", 
                                  "export MYSQL_HOST=",
                                  "\"",
                                  {
                                    "Fn::GetAtt": 
                                    ["myRDSInstance","Endpoint.Address"]
                                  },
                                  "\"",
                                  "'"," >> /etc/profile \n" 
                                
                                ]
                            ]
                        },
                        {
                          "Fn::Join": 
                          ["",
                            ["echo ",
                             "'", 
                             "export BucketName=",
                             "\"",
                             {
                               "Ref": "myS3Bucket"
                             },
                             "\"",
                             "'"," >> /etc/profile \n"]
                          ]
                        },
                       "echo 'export MYSQL_DIALECT=\"mysql\"' >> /etc/profile \n",
                       "echo 'export NODE_ENV=\"test\"' >> /etc/profile \n",
                       "echo 'export MYSQL_PORT=\"3306\"' >> /etc/profile \n",
                       "echo 'export spring_profiles_active=\"dev\"' >> /etc/profile \n",
                       "source /etc/profile \n"
                 ]
              ]
            }
          }
      }
      
    }


            
            
        }
    }